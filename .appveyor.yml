version: '{build}-{branch}'

shallow_clone: false

platform:
  - Win32
  - x64

configuration:
  - Debug

image:
  - Visual Studio 2015
  - Visual Studio 2017
  - Visual Studio 2019

cache:
  - C:\cmake-3.15.3-win64-x64

install:
  - git submodule update --init --recursive
  - ps: |
      if (![IO.File]::Exists("C:\cmake-3.15.3-win64-x64\bin\cmake.exe")) {
        Start-FileDownload 'https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-win64-x64.zip'
        7z x -y cmake-3.15.3-win64-x64.zip -oC:\
      }
      $env:PATH="C:\cmake-3.15.3-win64-x64\bin;$env:PATH"

build_script:
  - ps: |
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2015") {
          .\build.ps1 -VisualStudioVersion Vs2015 -Runtime Static -Platform $env:PLATFORM -Config $env:CONFIGURATION
      } elseif ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2017") {
          .\build.ps1 -VisualStudioVersion Vs2017 -Runtime Static -Platform $env:PLATFORM -Config $env:CONFIGURATION
      } else {
          .\build.ps1 -VisualStudioVersion Vs2019 -Runtime Static -Platform $env:PLATFORM -Config $env:CONFIGURATION
      }

test_script:
  - ps: |
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2015") {
          $TestExecutable = 'build_Vs2015_' + $env:PLATFORM + '_static\test\lib\' + $env:CONFIGURATION + '\lib_tests.exe'
      } elseif ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2017") {
          $TestExecutable = 'build_Vs2017_' + $env:PLATFORM + '_static\test\lib\' + $env:CONFIGURATION + '\lib_tests.exe'
      } else {
          $TestExecutable = 'build_Vs2019_' + $env:PLATFORM + '_static\test\lib\' + $env:CONFIGURATION + '\lib_tests.exe'
      }
      & $TestExecutable

deploy: off

notifications:
  - provider: Email
    to:
      - lordjeb@lordjeb.com
    on_build_status_changed: true
    on_build_success: false
    on_build_failure: false